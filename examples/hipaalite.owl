Prefix(:=<http://www.semanticweb.org/hsiy/ontologies/2017/2/supernomos#>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)


Ontology(<http://www.semanticweb.org/hsiy/ontologies/2017/2/supernomos>

Declaration(Class(:AND))
Declaration(Class(:AtomicSituation))
Declaration(Class(:Duty))
Declaration(Class(:LNOT))
Declaration(Class(:LogicalSituation))
Declaration(Class(:Norm))
Declaration(Class(:OR))
Declaration(Class(:Right))
Declaration(Class(:Situation))
Declaration(Class(:SuperSituation))
Declaration(ObjectProperty(:_contains))
Declaration(ObjectProperty(:activate))
Declaration(ObjectProperty(:and_))
Declaration(ObjectProperty(:not_))
Declaration(ObjectProperty(:or_))
Declaration(ObjectProperty(:satisfy))
Declaration(DataProperty(:Com))
Declaration(DataProperty(:Inc))
Declaration(DataProperty(:Tol))
Declaration(DataProperty(:Vio))
Declaration(DataProperty(:applicable))
Declaration(DataProperty(:hasAF))
Declaration(DataProperty(:hasAT))
Declaration(DataProperty(:hasAU))
Declaration(DataProperty(:hasID))
Declaration(DataProperty(:hasSF))
Declaration(DataProperty(:hasST))
Declaration(DataProperty(:hasSU))
Declaration(DataProperty(:hohfeldType))
Declaration(DataProperty(:satisfied))




############################
#   Classes
############################

# Class: :AND (:AND)

SubClassOf(:AND :LogicalSituation)

# Class: :AtomicSituation (:AtomicSituation)

SubClassOf(:AtomicSituation :Situation)

# Class: :Duty (:Duty)

SubClassOf(:Duty :Norm)

# Class: :LNOT (:LNOT)

SubClassOf(:LNOT :LogicalSituation)

# Class: :LogicalSituation (:LogicalSituation)

SubClassOf(:LogicalSituation :Situation)

# Class: :OR (:OR)

SubClassOf(:OR :LogicalSituation)

# Class: :Right (:Right)

SubClassOf(:Right :Norm)

# Class: :SuperSituation (:SuperSituation)

SubClassOf(:SuperSituation :Situation)


############################
#   Named Individuals
############################




Declaration(NamedIndividual(:HIPAA1))
# Individual: :HIPAA1 (:HIPAA1)
ClassAssertion(:Duty :HIPAA1)
DataPropertyAssertion(:hasID :HIPAA1 "HIPAA1"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA1 "Section 1: Disclosures of protected health information: A covered entity may not disclose protected health information, except as permitted or required by sections 2 and 3 in this document."^^xsd:string)
Declaration(NamedIndividual(:HIPAA1_1))
# Individual: :HIPAA1_1 (:HIPAA1_1)
ClassAssertion(:AtomicSituation :HIPAA1_1)
ObjectPropertyAssertion(:satisfy :HIPAA1_1 :HIPAA1)
DataPropertyAssertion(:hasID :HIPAA1_1 "HIPAA1_1"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA1_1 "covered entity [did not disclose] protected health information"^^xsd:string)
Declaration(NamedIndividual(:HIPAA1_2))
# Individual: :HIPAA1_2 (:HIPAA1_2)
ClassAssertion(:LNOT :HIPAA1_2)
ObjectPropertyAssertion(:activate :HIPAA1_2 :HIPAA1)
DataPropertyAssertion(:hasID :HIPAA1_2 "HIPAA1_2"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA1_2 "not"^^xsd:string)
Declaration(NamedIndividual(:HIPAA1_3))
# Individual: :HIPAA1_3 (:HIPAA1_3)
ClassAssertion(:OR :HIPAA1_3)
ObjectPropertyAssertion(:not_ :HIPAA1_3 :HIPAA1_2)
DataPropertyAssertion(:hasID :HIPAA1_3 "HIPAA1_3"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA1_3 "or"^^xsd:string)
ObjectPropertyAssertion(:_contains :HIPAA1_4 :HIPAA2)
Declaration(NamedIndividual(:HIPAA1_4))
# Individual: :HIPAA1_4 (:HIPAA1_4)
ClassAssertion(:SuperSituation :HIPAA1_4)
ObjectPropertyAssertion(:or_ :HIPAA1_4 :HIPAA1_3)
DataPropertyAssertion(:hasID :HIPAA1_4 "HIPAA1_4"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA1_4 "SS_HIPAA2"^^xsd:string)
ObjectPropertyAssertion(:_contains :HIPAA1_5 :HIPAA3)
Declaration(NamedIndividual(:HIPAA1_5))
# Individual: :HIPAA1_5 (:HIPAA1_5)
ClassAssertion(:SuperSituation :HIPAA1_5)
ObjectPropertyAssertion(:or_ :HIPAA1_5 :HIPAA1_3)
DataPropertyAssertion(:hasID :HIPAA1_5 "HIPAA1_5"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA1_5 "SS_HIPAA3"^^xsd:string)


Declaration(NamedIndividual(:HIPAA2))
# Individual: :HIPAA2 (:HIPAA2)
ClassAssertion(:Right :HIPAA2)
DataPropertyAssertion(:hasID :HIPAA2 "HIPAA2"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2 "Section 2: Disclosures requiring an opportunity for the individual to agree or to object: A covered entity may disclose protected health information, provided that the individual is informed in advance of the disclosure and has the opportunity to agree to or prohibit or restrict the disclosure, in accordance with the applicable requirements of this section."^^xsd:string)
Declaration(NamedIndividual(:HIPAA2_6))
# Individual: :HIPAA2_6 (:HIPAA2_6)
ClassAssertion(:AtomicSituation :HIPAA2_6)
ObjectPropertyAssertion(:satisfy :HIPAA2_6 :HIPAA2)
DataPropertyAssertion(:hasID :HIPAA2_6 "HIPAA2_6"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2_6 "covered entity [disclosed] protected health information"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2_7))
# Individual: :HIPAA2_7 (:HIPAA2_7)
ClassAssertion(:AND :HIPAA2_7)
ObjectPropertyAssertion(:activate :HIPAA2_7 :HIPAA2)
DataPropertyAssertion(:hasID :HIPAA2_7 "HIPAA2_7"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2_7 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2_8))
# Individual: :HIPAA2_8 (:HIPAA2_8)
ClassAssertion(:AND :HIPAA2_8)
ObjectPropertyAssertion(:and_ :HIPAA2_8 :HIPAA2_7)
DataPropertyAssertion(:hasID :HIPAA2_8 "HIPAA2_8"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2_8 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2_9))
# Individual: :HIPAA2_9 (:HIPAA2_9)
ClassAssertion(:AtomicSituation :HIPAA2_9)
ObjectPropertyAssertion(:and_ :HIPAA2_9 :HIPAA2_8)
DataPropertyAssertion(:hasID :HIPAA2_9 "HIPAA2_9"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2_9 "individual is informed in advance of the disclosure"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2_10))
# Individual: :HIPAA2_10 (:HIPAA2_10)
ClassAssertion(:AtomicSituation :HIPAA2_10)
ObjectPropertyAssertion(:and_ :HIPAA2_10 :HIPAA2_8)
DataPropertyAssertion(:hasID :HIPAA2_10 "HIPAA2_10"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2_10 "[individual] has the opportunity to agree to or prohibit or restrict the disclosure"^^xsd:string)
ObjectPropertyAssertion(:_contains :HIPAA2_11 :HIPAA2a)
Declaration(NamedIndividual(:HIPAA2_11))
# Individual: :HIPAA2_11 (:HIPAA2_11)
ClassAssertion(:SuperSituation :HIPAA2_11)
ObjectPropertyAssertion(:and_ :HIPAA2_11 :HIPAA2_7)
DataPropertyAssertion(:hasID :HIPAA2_11 "HIPAA2_11"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2_11 "SS_HIPAA2a"^^xsd:string)


Declaration(NamedIndividual(:HIPAA2a))
# Individual: :HIPAA2a (:HIPAA2a)
ClassAssertion(:Duty :HIPAA2a)
DataPropertyAssertion(:hasID :HIPAA2a "HIPAA2a"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2a "Section 2(a): Opportunity to object: A covered health care provider must inform an individual of the persons to whom it may disclose such protected health information  (including disclosures to clergy of information regarding religious affiliation) and provide the individual with the opportunity to restrict or prohibit some or all of the disclosures permitted by [Section 2(b) and (c)]."^^xsd:string)
Declaration(NamedIndividual(:HIPAA2a_12))
# Individual: :HIPAA2a_12 (:HIPAA2a_12)
ClassAssertion(:AND :HIPAA2a_12)
ObjectPropertyAssertion(:satisfy :HIPAA2a_12 :HIPAA2a)
DataPropertyAssertion(:hasID :HIPAA2a_12 "HIPAA2a_12"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2a_12 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2a_13))
# Individual: :HIPAA2a_13 (:HIPAA2a_13)
ClassAssertion(:AtomicSituation :HIPAA2a_13)
ObjectPropertyAssertion(:and_ :HIPAA2a_13 :HIPAA2a_12)
DataPropertyAssertion(:hasID :HIPAA2a_13 "HIPAA2a_13"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2a_13 "covered entity [informed] an individual of the persons to whom it may disclose such protected health information  (including disclosures to clergy of information regarding religious affiliation)"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2a_14))
# Individual: :HIPAA2a_14 (:HIPAA2a_14)
ClassAssertion(:AtomicSituation :HIPAA2a_14)
ObjectPropertyAssertion(:and_ :HIPAA2a_14 :HIPAA2a_12)
DataPropertyAssertion(:hasID :HIPAA2a_14 "HIPAA2a_14"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2a_14 "[covered entity provided] the individual with the opportunity to restrict or prohibit some or all of the disclosures"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2a_15))
# Individual: :HIPAA2a_15 (:HIPAA2a_15)
ClassAssertion(:AND :HIPAA2a_15)
ObjectPropertyAssertion(:activate :HIPAA2a_15 :HIPAA2a)
DataPropertyAssertion(:hasID :HIPAA2a_15 "HIPAA2a_15"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2a_15 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2a_16))
# Individual: :HIPAA2a_16 (:HIPAA2a_16)
ClassAssertion(:AtomicSituation :HIPAA2a_16)
ObjectPropertyAssertion(:and_ :HIPAA2a_16 :HIPAA2a_15)
DataPropertyAssertion(:hasID :HIPAA2a_16 "HIPAA2a_16"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2a_16 "[covered entity intends to disclose protected health information]"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2a_17))
# Individual: :HIPAA2a_17 (:HIPAA2a_17)
ClassAssertion(:OR :HIPAA2a_17)
ObjectPropertyAssertion(:and_ :HIPAA2a_17 :HIPAA2a_15)
DataPropertyAssertion(:hasID :HIPAA2a_17 "HIPAA2a_17"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2a_17 "or"^^xsd:string)
ObjectPropertyAssertion(:_contains :HIPAA2a_18 :HIPAA2b)
Declaration(NamedIndividual(:HIPAA2a_18))
# Individual: :HIPAA2a_18 (:HIPAA2a_18)
ClassAssertion(:SuperSituation :HIPAA2a_18)
ObjectPropertyAssertion(:or_ :HIPAA2a_18 :HIPAA2a_17)
DataPropertyAssertion(:hasID :HIPAA2a_18 "HIPAA2a_18"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2a_18 "SS_HIPAA2b"^^xsd:string)
ObjectPropertyAssertion(:_contains :HIPAA2a_19 :HIPAA2c)
Declaration(NamedIndividual(:HIPAA2a_19))
# Individual: :HIPAA2a_19 (:HIPAA2a_19)
ClassAssertion(:SuperSituation :HIPAA2a_19)
ObjectPropertyAssertion(:or_ :HIPAA2a_19 :HIPAA2a_17)
DataPropertyAssertion(:hasID :HIPAA2a_19 "HIPAA2a_19"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2a_19 "SS_HIPAA2c"^^xsd:string)


Declaration(NamedIndividual(:HIPAA2b))
# Individual: :HIPAA2b (:HIPAA2b)
ClassAssertion(:Right :HIPAA2b)
DataPropertyAssertion(:hasID :HIPAA2b "HIPAA2b"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2b "Section 2(b): Disclosures for involvement in the individual's care: A covered entity may disclose to a family member, other relative, or a close personal friend of the individual, or any other person identified by the individual, the protected health information directly relevant to such person's involvement with the individual's health care or payment related to the individual's health care."^^xsd:string)
Declaration(NamedIndividual(:HIPAA2b_20))
# Individual: :HIPAA2b_20 (:HIPAA2b_20)
ClassAssertion(:AtomicSituation :HIPAA2b_20)
ObjectPropertyAssertion(:satisfy :HIPAA2b_20 :HIPAA2b)
DataPropertyAssertion(:hasID :HIPAA2b_20 "HIPAA2b_20"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2b_20 "covered entity [disclosed] protected health information"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2b_21))
# Individual: :HIPAA2b_21 (:HIPAA2b_21)
ClassAssertion(:AND :HIPAA2b_21)
ObjectPropertyAssertion(:activate :HIPAA2b_21 :HIPAA2b)
DataPropertyAssertion(:hasID :HIPAA2b_21 "HIPAA2b_21"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2b_21 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2b_22))
# Individual: :HIPAA2b_22 (:HIPAA2b_22)
ClassAssertion(:AtomicSituation :HIPAA2b_22)
ObjectPropertyAssertion(:and_ :HIPAA2b_22 :HIPAA2b_21)
DataPropertyAssertion(:hasID :HIPAA2b_22 "HIPAA2b_22"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2b_22 "[individual is alive]"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2b_23))
# Individual: :HIPAA2b_23 (:HIPAA2b_23)
ClassAssertion(:AND :HIPAA2b_23)
ObjectPropertyAssertion(:and_ :HIPAA2b_23 :HIPAA2b_21)
DataPropertyAssertion(:hasID :HIPAA2b_23 "HIPAA2b_23"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2b_23 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2b_24))
# Individual: :HIPAA2b_24 (:HIPAA2b_24)
ClassAssertion(:AtomicSituation :HIPAA2b_24)
ObjectPropertyAssertion(:and_ :HIPAA2b_24 :HIPAA2b_23)
DataPropertyAssertion(:hasID :HIPAA2b_24 "HIPAA2b_24"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2b_24 "[covered entity discloses protected health information] to a family member, other relative, or a close personal friend of the individual, or any other person identified by the individual"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2b_25))
# Individual: :HIPAA2b_25 (:HIPAA2b_25)
ClassAssertion(:AtomicSituation :HIPAA2b_25)
ObjectPropertyAssertion(:and_ :HIPAA2b_25 :HIPAA2b_23)
DataPropertyAssertion(:hasID :HIPAA2b_25 "HIPAA2b_25"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2b_25 "[protected health information to disclose is] directly relevant to such person's [(family member, other relative, etc.)] involvement with the individual's health care or payment related to the individual's health care."^^xsd:string)


Declaration(NamedIndividual(:HIPAA2c))
# Individual: :HIPAA2c (:HIPAA2c)
ClassAssertion(:Right :HIPAA2c)
DataPropertyAssertion(:hasID :HIPAA2c "HIPAA2c"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2c "Section 2(c): Disclosures when the individual is deceased: If the individual is deceased, a covered entity may disclose to a family member, or other persons identified in [Section 2(b)] who were involved in the individual's care or payment for health care prior to the individual's death, protected health information of the individual that is relevant to such person's involvement, unless doing so is inconsistent with any prior expressed preference of the individual that is known to the covered entity."^^xsd:string)
Declaration(NamedIndividual(:HIPAA2c_26))
# Individual: :HIPAA2c_26 (:HIPAA2c_26)
ClassAssertion(:AtomicSituation :HIPAA2c_26)
ObjectPropertyAssertion(:satisfy :HIPAA2c_26 :HIPAA2c)
DataPropertyAssertion(:hasID :HIPAA2c_26 "HIPAA2c_26"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2c_26 "covered entity [disclosed] protected health information"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2c_27))
# Individual: :HIPAA2c_27 (:HIPAA2c_27)
ClassAssertion(:AND :HIPAA2c_27)
ObjectPropertyAssertion(:activate :HIPAA2c_27 :HIPAA2c)
DataPropertyAssertion(:hasID :HIPAA2c_27 "HIPAA2c_27"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2c_27 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2c_28))
# Individual: :HIPAA2c_28 (:HIPAA2c_28)
ClassAssertion(:AtomicSituation :HIPAA2c_28)
ObjectPropertyAssertion(:and_ :HIPAA2c_28 :HIPAA2c_27)
DataPropertyAssertion(:hasID :HIPAA2c_28 "HIPAA2c_28"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2c_28 "individual is deceased"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2c_29))
# Individual: :HIPAA2c_29 (:HIPAA2c_29)
ClassAssertion(:AND :HIPAA2c_29)
ObjectPropertyAssertion(:and_ :HIPAA2c_29 :HIPAA2c_27)
DataPropertyAssertion(:hasID :HIPAA2c_29 "HIPAA2c_29"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2c_29 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2c_30))
# Individual: :HIPAA2c_30 (:HIPAA2c_30)
ClassAssertion(:AND :HIPAA2c_30)
ObjectPropertyAssertion(:and_ :HIPAA2c_30 :HIPAA2c_29)
DataPropertyAssertion(:hasID :HIPAA2c_30 "HIPAA2c_30"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2c_30 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2c_31))
# Individual: :HIPAA2c_31 (:HIPAA2c_31)
ClassAssertion(:AtomicSituation :HIPAA2c_31)
ObjectPropertyAssertion(:and_ :HIPAA2c_31 :HIPAA2c_30)
DataPropertyAssertion(:hasID :HIPAA2c_31 "HIPAA2c_31"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2c_31 "[covered entity discloses protected health information] to a family member, other relative, or a close personal friend of the individual, or any other person identified by the individual"^^xsd:string)
Declaration(NamedIndividual(:HIPAA2c_32))
# Individual: :HIPAA2c_32 (:HIPAA2c_32)
ClassAssertion(:AtomicSituation :HIPAA2c_32)
ObjectPropertyAssertion(:and_ :HIPAA2c_32 :HIPAA2c_30)
DataPropertyAssertion(:hasID :HIPAA2c_32 "HIPAA2c_32"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2c_32 "[protected health information to disclose is] directly relevant to such person's [(family member, other relative, etc.)] involvement with the individual's health care or payment related to the individual's health care."^^xsd:string)
Declaration(NamedIndividual(:HIPAA2c_33))
# Individual: :HIPAA2c_33 (:HIPAA2c_33)
ClassAssertion(:AtomicSituation :HIPAA2c_33)
ObjectPropertyAssertion(:and_ :HIPAA2c_33 :HIPAA2c_29)
DataPropertyAssertion(:hasID :HIPAA2c_33 "HIPAA2c_33"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA2c_33 "[disclosing protected health information] is [consistent] with any prior expressed preference of the individual that is known to the covered entity"^^xsd:string)


Declaration(NamedIndividual(:HIPAA3))
# Individual: :HIPAA3 (:HIPAA3)
ClassAssertion(:Right :HIPAA3)
DataPropertyAssertion(:hasID :HIPAA3 "HIPAA3"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3 "Section 3: Disclosures for which an opportunity to agree or object is not required. A covered entity may disclose protected health information without the opportunity for the individual to agree or object as described in section 2, in the situations covered by this section."^^xsd:string)
Declaration(NamedIndividual(:HIPAA3_34))
# Individual: :HIPAA3_34 (:HIPAA3_34)
ClassAssertion(:AtomicSituation :HIPAA3_34)
ObjectPropertyAssertion(:satisfy :HIPAA3_34 :HIPAA3)
DataPropertyAssertion(:hasID :HIPAA3_34 "HIPAA3_34"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3_34 "covered entity [disclosed] protected health information"^^xsd:string)
ObjectPropertyAssertion(:_contains :HIPAA3_35 :HIPAA3a)
Declaration(NamedIndividual(:HIPAA3_35))
# Individual: :HIPAA3_35 (:HIPAA3_35)
ClassAssertion(:SuperSituation :HIPAA3_35)
ObjectPropertyAssertion(:activate :HIPAA3_35 :HIPAA3)
DataPropertyAssertion(:hasID :HIPAA3_35 "HIPAA3_35"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3_35 "SS_HIPAA3a"^^xsd:string)


Declaration(NamedIndividual(:HIPAA3a))
# Individual: :HIPAA3a (:HIPAA3a)
ClassAssertion(:Right :HIPAA3a)
DataPropertyAssertion(:hasID :HIPAA3a "HIPAA3a"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3a "Section 3(a): Uses and disclosures required for a law enforcement purpose: A covered entity may disclose protected health information to the extent that such disclosure is required for law enforcement purpose if the following conditions are met, as applicable."^^xsd:string)
Declaration(NamedIndividual(:HIPAA3a_36))
# Individual: :HIPAA3a_36 (:HIPAA3a_36)
ClassAssertion(:AtomicSituation :HIPAA3a_36)
ObjectPropertyAssertion(:satisfy :HIPAA3a_36 :HIPAA3a)
DataPropertyAssertion(:hasID :HIPAA3a_36 "HIPAA3a_36"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3a_36 "covered entity [disclosed] protected health information"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3a_37))
# Individual: :HIPAA3a_37 (:HIPAA3a_37)
ClassAssertion(:OR :HIPAA3a_37)
ObjectPropertyAssertion(:activate :HIPAA3a_37 :HIPAA3a)
DataPropertyAssertion(:hasID :HIPAA3a_37 "HIPAA3a_37"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3a_37 "or"^^xsd:string)
ObjectPropertyAssertion(:_contains :HIPAA3a_38 :HIPAA3ai)
Declaration(NamedIndividual(:HIPAA3a_38))
# Individual: :HIPAA3a_38 (:HIPAA3a_38)
ClassAssertion(:SuperSituation :HIPAA3a_38)
ObjectPropertyAssertion(:or_ :HIPAA3a_38 :HIPAA3a_37)
DataPropertyAssertion(:hasID :HIPAA3a_38 "HIPAA3a_38"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3a_38 "SS_HIPAA3ai"^^xsd:string)
ObjectPropertyAssertion(:_contains :HIPAA3a_39 :HIPAA3aii)
Declaration(NamedIndividual(:HIPAA3a_39))
# Individual: :HIPAA3a_39 (:HIPAA3a_39)
ClassAssertion(:SuperSituation :HIPAA3a_39)
ObjectPropertyAssertion(:or_ :HIPAA3a_39 :HIPAA3a_37)
DataPropertyAssertion(:hasID :HIPAA3a_39 "HIPAA3a_39"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3a_39 "SS_HIPAA3aii"^^xsd:string)


Declaration(NamedIndividual(:HIPAA3ai))
# Individual: :HIPAA3ai (:HIPAA3ai)
ClassAssertion(:Right :HIPAA3ai)
DataPropertyAssertion(:hasID :HIPAA3ai "HIPAA3ai"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai "Section 3(a)(i): Disclosures required for law enforcement purpose: A covered entity may disclose protected health information [as required by law or in compliance with and as limited by relevant legal requirements]"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_40))
# Individual: :HIPAA3ai_40 (:HIPAA3ai_40)
ClassAssertion(:AtomicSituation :HIPAA3ai_40)
ObjectPropertyAssertion(:satisfy :HIPAA3ai_40 :HIPAA3ai)
DataPropertyAssertion(:hasID :HIPAA3ai_40 "HIPAA3ai_40"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_40 "covered entity [disclosed] protected health information"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_41))
# Individual: :HIPAA3ai_41 (:HIPAA3ai_41)
ClassAssertion(:OR :HIPAA3ai_41)
ObjectPropertyAssertion(:activate :HIPAA3ai_41 :HIPAA3ai)
DataPropertyAssertion(:hasID :HIPAA3ai_41 "HIPAA3ai_41"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_41 "or"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_42))
# Individual: :HIPAA3ai_42 (:HIPAA3ai_42)
ClassAssertion(:AtomicSituation :HIPAA3ai_42)
ObjectPropertyAssertion(:or_ :HIPAA3ai_42 :HIPAA3ai_41)
DataPropertyAssertion(:hasID :HIPAA3ai_42 "HIPAA3ai_42"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_42 "[3(a)(i)(1) covered entity is] required by law [to disclose protected health information] including laws that require the reporting of certain types of wounds (gunshot, stabbing) or other physical injuries"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_43))
# Individual: :HIPAA3ai_43 (:HIPAA3ai_43)
ClassAssertion(:OR :HIPAA3ai_43)
ObjectPropertyAssertion(:or_ :HIPAA3ai_43 :HIPAA3ai_41)
DataPropertyAssertion(:hasID :HIPAA3ai_43 "HIPAA3ai_43"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_43 "or"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_44))
# Individual: :HIPAA3ai_44 (:HIPAA3ai_44)
ClassAssertion(:OR :HIPAA3ai_44)
ObjectPropertyAssertion(:or_ :HIPAA3ai_44 :HIPAA3ai_43)
DataPropertyAssertion(:hasID :HIPAA3ai_44 "HIPAA3ai_44"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_44 "or"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_45))
# Individual: :HIPAA3ai_45 (:HIPAA3ai_45)
ClassAssertion(:AtomicSituation :HIPAA3ai_45)
ObjectPropertyAssertion(:or_ :HIPAA3ai_45 :HIPAA3ai_44)
DataPropertyAssertion(:hasID :HIPAA3ai_45 "HIPAA3ai_45"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_45 "[3(a)(i)(2)(a) disclosure of protected health information is in compliance with and as limited by the relevant requirements of] a court order or court-ordered warrant, or a subpoena or summons issued by a judicial officer"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_46))
# Individual: :HIPAA3ai_46 (:HIPAA3ai_46)
ClassAssertion(:AtomicSituation :HIPAA3ai_46)
ObjectPropertyAssertion(:or_ :HIPAA3ai_46 :HIPAA3ai_44)
DataPropertyAssertion(:hasID :HIPAA3ai_46 "HIPAA3ai_46"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_46 "[3(a)(i)(2)(b) disclosure of protected health information is in compliance with and as limited by the relevant requirements of] a grand jury subpoena"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_47))
# Individual: :HIPAA3ai_47 (:HIPAA3ai_47)
ClassAssertion(:AND :HIPAA3ai_47)
ObjectPropertyAssertion(:or_ :HIPAA3ai_47 :HIPAA3ai_43)
DataPropertyAssertion(:hasID :HIPAA3ai_47 "HIPAA3ai_47"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_47 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_48))
# Individual: :HIPAA3ai_48 (:HIPAA3ai_48)
ClassAssertion(:AtomicSituation :HIPAA3ai_48)
ObjectPropertyAssertion(:and_ :HIPAA3ai_48 :HIPAA3ai_47)
DataPropertyAssertion(:hasID :HIPAA3ai_48 "HIPAA3ai_48"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_48 "[3(a)(i)(2)(c) disclosure of protected health information is in compliance with and as limited by the relevant requirements of] an administrative request, including an administrative subpoena or summons, a civil or an authorized investigative demand, or similar process authorized under law"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_49))
# Individual: :HIPAA3ai_49 (:HIPAA3ai_49)
ClassAssertion(:AND :HIPAA3ai_49)
ObjectPropertyAssertion(:and_ :HIPAA3ai_49 :HIPAA3ai_47)
DataPropertyAssertion(:hasID :HIPAA3ai_49 "HIPAA3ai_49"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_49 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_50))
# Individual: :HIPAA3ai_50 (:HIPAA3ai_50)
ClassAssertion(:AtomicSituation :HIPAA3ai_50)
ObjectPropertyAssertion(:and_ :HIPAA3ai_50 :HIPAA3ai_49)
DataPropertyAssertion(:hasID :HIPAA3ai_50 "HIPAA3ai_50"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_50 "[3(a)(i)(2)(c)(i) disclosure of protected health information is in compliance with and as limited by the relevant requirements of an administrative request ... provided that] the information sought is relevant and material to a legitimate law enforcement inquiry"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_51))
# Individual: :HIPAA3ai_51 (:HIPAA3ai_51)
ClassAssertion(:AND :HIPAA3ai_51)
ObjectPropertyAssertion(:and_ :HIPAA3ai_51 :HIPAA3ai_49)
DataPropertyAssertion(:hasID :HIPAA3ai_51 "HIPAA3ai_51"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_51 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_52))
# Individual: :HIPAA3ai_52 (:HIPAA3ai_52)
ClassAssertion(:AtomicSituation :HIPAA3ai_52)
ObjectPropertyAssertion(:and_ :HIPAA3ai_52 :HIPAA3ai_51)
DataPropertyAssertion(:hasID :HIPAA3ai_52 "HIPAA3ai_52"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_52 "[3(a)(i)(2)(c)(ii) disclosure of protected health information is in compliance with and as limited by the relevant requirements of an administrative request ... provided that] the request is specific and limited in scope to the extent reasonably practicable in light of the purpose for which the information is sought"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3ai_53))
# Individual: :HIPAA3ai_53 (:HIPAA3ai_53)
ClassAssertion(:AtomicSituation :HIPAA3ai_53)
ObjectPropertyAssertion(:and_ :HIPAA3ai_53 :HIPAA3ai_51)
DataPropertyAssertion(:hasID :HIPAA3ai_53 "HIPAA3ai_53"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3ai_53 "[3(a)(i)(2)(c)(iii) disclosure of protected health information is in compliance with and as limited by the relevant requirements of an administrative request ... provided that] de-identified information could not reasonably be used [to identify the individual]"^^xsd:string)


Declaration(NamedIndividual(:HIPAA3aii))
# Individual: :HIPAA3aii (:HIPAA3aii)
ClassAssertion(:Right :HIPAA3aii)
DataPropertyAssertion(:hasID :HIPAA3aii "HIPAA3aii"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3aii "Section 3(a)(ii): Victims of a crime. Except for disclosures required for law enforcement purpose as permitted by [section 3(a)(i)], a covered entity may disclose protected health information in response to a law enforcement official's request for such information about an individual who is or is suspected to be a victim of a crime [if the following conditions are met: The individual agrees to the disclosure; or The covered entity is unable to obtain the individual's agreement because of incapacity or other emergency circumstance]."^^xsd:string)
Declaration(NamedIndividual(:HIPAA3aii_54))
# Individual: :HIPAA3aii_54 (:HIPAA3aii_54)
ClassAssertion(:AtomicSituation :HIPAA3aii_54)
ObjectPropertyAssertion(:satisfy :HIPAA3aii_54 :HIPAA3aii)
DataPropertyAssertion(:hasID :HIPAA3aii_54 "HIPAA3aii_54"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3aii_54 "covered entity [disclosed] protected health information"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3aii_55))
# Individual: :HIPAA3aii_55 (:HIPAA3aii_55)
ClassAssertion(:AND :HIPAA3aii_55)
ObjectPropertyAssertion(:activate :HIPAA3aii_55 :HIPAA3aii)
DataPropertyAssertion(:hasID :HIPAA3aii_55 "HIPAA3aii_55"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3aii_55 "and"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3aii_56))
# Individual: :HIPAA3aii_56 (:HIPAA3aii_56)
ClassAssertion(:AtomicSituation :HIPAA3aii_56)
ObjectPropertyAssertion(:and_ :HIPAA3aii_56 :HIPAA3aii_55)
DataPropertyAssertion(:hasID :HIPAA3aii_56 "HIPAA3aii_56"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3aii_56 "individual is or is suspected to be a victim of a crime"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3aii_57))
# Individual: :HIPAA3aii_57 (:HIPAA3aii_57)
ClassAssertion(:OR :HIPAA3aii_57)
ObjectPropertyAssertion(:and_ :HIPAA3aii_57 :HIPAA3aii_55)
DataPropertyAssertion(:hasID :HIPAA3aii_57 "HIPAA3aii_57"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3aii_57 "or"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3aii_58))
# Individual: :HIPAA3aii_58 (:HIPAA3aii_58)
ClassAssertion(:AtomicSituation :HIPAA3aii_58)
ObjectPropertyAssertion(:or_ :HIPAA3aii_58 :HIPAA3aii_57)
DataPropertyAssertion(:hasID :HIPAA3aii_58 "HIPAA3aii_58"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3aii_58 "individual agrees to the disclosure of protected health information"^^xsd:string)
Declaration(NamedIndividual(:HIPAA3aii_59))
# Individual: :HIPAA3aii_59 (:HIPAA3aii_59)
ClassAssertion(:AtomicSituation :HIPAA3aii_59)
ObjectPropertyAssertion(:or_ :HIPAA3aii_59 :HIPAA3aii_57)
DataPropertyAssertion(:hasID :HIPAA3aii_59 "HIPAA3aii_59"^^xsd:string)
DataPropertyAssertion(:hasDesc :HIPAA3aii_59 "covered entity is unable to obtain the individual's agreement because of incapacity or other emergency circumstance"^^xsd:string)

DifferentIndividuals( :HIPAA1 :HIPAA1_1 :HIPAA1_2 :HIPAA1_3 :HIPAA1_4 :HIPAA1_5 :HIPAA2 :HIPAA2_6 :HIPAA2_7 :HIPAA2_8 :HIPAA2_9 :HIPAA2_10 :HIPAA2_11 :HIPAA2a :HIPAA2a_12 :HIPAA2a_13 :HIPAA2a_14 :HIPAA2a_15 :HIPAA2a_16 :HIPAA2a_17 :HIPAA2a_18 :HIPAA2a_19 :HIPAA2b :HIPAA2b_20 :HIPAA2b_21 :HIPAA2b_22 :HIPAA2b_23 :HIPAA2b_24 :HIPAA2b_25 :HIPAA2c :HIPAA2c_26 :HIPAA2c_27 :HIPAA2c_28 :HIPAA2c_29 :HIPAA2c_30 :HIPAA2c_31 :HIPAA2c_32 :HIPAA2c_33 :HIPAA3 :HIPAA3_34 :HIPAA3_35 :HIPAA3a :HIPAA3a_36 :HIPAA3a_37 :HIPAA3a_38 :HIPAA3a_39 :HIPAA3ai :HIPAA3ai_40 :HIPAA3ai_41 :HIPAA3ai_42 :HIPAA3ai_43 :HIPAA3ai_44 :HIPAA3ai_45 :HIPAA3ai_46 :HIPAA3ai_47 :HIPAA3ai_48 :HIPAA3ai_49 :HIPAA3ai_50 :HIPAA3ai_51 :HIPAA3ai_52 :HIPAA3ai_53 :HIPAA3aii :HIPAA3aii_54 :HIPAA3aii_55 :HIPAA3aii_56 :HIPAA3aii_57 :HIPAA3aii_58 :HIPAA3aii_59)


DLSafeRule(Body(ObjectPropertyAtom(:and_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) ClassAtom(:AND Variable(<urn:swrl#o>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SF") ObjectPropertyAtom(:and_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:Situation Variable(<urn:swrl#a>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SF"))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SF")))
DLSafeRule(Body(ObjectPropertyAtom(:and_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) ClassAtom(:AND Variable(<urn:swrl#o>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SF") ObjectPropertyAtom(:and_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SU") ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SF")))
DLSafeRule(Body(ObjectPropertyAtom(:and_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST") ClassAtom(:AND Variable(<urn:swrl#o>)) ObjectPropertyAtom(:and_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:Situation Variable(<urn:swrl#a>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SF"))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SF")))
DLSafeRule(Body(ObjectPropertyAtom(:and_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST") ClassAtom(:AND Variable(<urn:swrl#o>)) ObjectPropertyAtom(:and_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "ST") ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "ST")))
DLSafeRule(Body(ObjectPropertyAtom(:and_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST") ClassAtom(:AND Variable(<urn:swrl#o>)) ObjectPropertyAtom(:and_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SU") ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SU")))
DLSafeRule(Body(ObjectPropertyAtom(:and_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) ClassAtom(:AND Variable(<urn:swrl#o>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SU") ObjectPropertyAtom(:and_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SU") ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SU")))
DLSafeRule(Body(DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AF") ClassAtom(:Duty Variable(<urn:swrl#z>)))Head(DataPropertyAtom(:Tol Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
DLSafeRule(Body(ClassAtom(:Duty Variable(<urn:swrl#z>)) DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AT") DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SF"))Head(DataPropertyAtom(:Vio Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
DLSafeRule(Body(ClassAtom(:Duty Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "ST") DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AT"))Head(DataPropertyAtom(:Com Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
DLSafeRule(Body(ClassAtom(:Duty Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SU") DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AT"))Head(DataPropertyAtom(:Inc Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
DLSafeRule(Body(DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AU") ClassAtom(:Duty Variable(<urn:swrl#z>)))Head(DataPropertyAtom(:Inc Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
DLSafeRule(Body(ObjectPropertyAtom(:not_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SF") ClassAtom(:LNOT Variable(<urn:swrl#o>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "ST")))
DLSafeRule(Body(ObjectPropertyAtom(:not_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST") ClassAtom(:LNOT Variable(<urn:swrl#o>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SF")))
DLSafeRule(Body(ObjectPropertyAtom(:not_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SU") ClassAtom(:LNOT Variable(<urn:swrl#o>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SU")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SF") ObjectPropertyAtom(:activate Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AF")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST") ObjectPropertyAtom(:activate Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AT")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SU") ObjectPropertyAtom(:activate Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AU")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SF") ObjectPropertyAtom(:satisfy Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SF")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST") ObjectPropertyAtom(:satisfy Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "ST")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SU") ObjectPropertyAtom(:satisfy Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SU")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) ClassAtom(:SuperSituation Variable(<urn:swrl#a>)) ObjectPropertyAtom(:_contains Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DataPropertyAtom(:Com Variable(<urn:swrl#z>) "true"^^xsd:boolean) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) ClassAtom(:SuperSituation Variable(<urn:swrl#a>)) ObjectPropertyAtom(:_contains Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DataPropertyAtom(:Inc Variable(<urn:swrl#z>) "true"^^xsd:boolean))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SU")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) ClassAtom(:SuperSituation Variable(<urn:swrl#a>)) ObjectPropertyAtom(:_contains Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DataPropertyAtom(:Tol Variable(<urn:swrl#z>) "true"^^xsd:boolean) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST")))
DLSafeRule(Body(ClassAtom(:Norm Variable(<urn:swrl#z>)) ClassAtom(:SuperSituation Variable(<urn:swrl#a>)) ObjectPropertyAtom(:_contains Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) DataPropertyAtom(:Vio Variable(<urn:swrl#z>) "true"^^xsd:boolean))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SF")))
DLSafeRule(Body(ObjectPropertyAtom(:or_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SF") ObjectPropertyAtom(:or_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:OR Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#a>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SF"))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SF")))
DLSafeRule(Body(ObjectPropertyAtom(:or_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SF") ObjectPropertyAtom(:or_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:OR Variable(<urn:swrl#o>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SU") ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SU")))
DLSafeRule(Body(ObjectPropertyAtom(:or_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST") ObjectPropertyAtom(:or_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:OR Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#a>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SF"))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "ST")))
DLSafeRule(Body(ObjectPropertyAtom(:or_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST") ObjectPropertyAtom(:or_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:OR Variable(<urn:swrl#o>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "ST") ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "ST")))
DLSafeRule(Body(ObjectPropertyAtom(:or_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "ST") ObjectPropertyAtom(:or_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:OR Variable(<urn:swrl#o>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SU") ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "ST")))
DLSafeRule(Body(ObjectPropertyAtom(:or_ Variable(<urn:swrl#a>) Variable(<urn:swrl#o>)) ClassAtom(:Situation Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#a>) "SU") ObjectPropertyAtom(:or_ Variable(<urn:swrl#z>) Variable(<urn:swrl#o>)) DifferentIndividualsAtom(Variable(<urn:swrl#a>) Variable(<urn:swrl#z>)) ClassAtom(:OR Variable(<urn:swrl#o>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SU") ClassAtom(:Situation Variable(<urn:swrl#a>)))Head(DataPropertyAtom(:satisfied Variable(<urn:swrl#o>) "SU")))
DLSafeRule(Body(DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AF") ClassAtom(:Right Variable(<urn:swrl#z>)))Head(DataPropertyAtom(:Inc Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
DLSafeRule(Body(ClassAtom(:Right Variable(<urn:swrl#z>)) DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AT") DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SF"))Head(DataPropertyAtom(:Tol Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
DLSafeRule(Body(ClassAtom(:Right Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "ST") DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AT"))Head(DataPropertyAtom(:Com Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
DLSafeRule(Body(ClassAtom(:Right Variable(<urn:swrl#z>)) DataPropertyAtom(:satisfied Variable(<urn:swrl#z>) "SU") DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AT"))Head(DataPropertyAtom(:Tol Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
DLSafeRule(Body(DataPropertyAtom(:applicable Variable(<urn:swrl#z>) "AU") ClassAtom(:Right Variable(<urn:swrl#z>)))Head(DataPropertyAtom(:Inc Variable(<urn:swrl#z>) "true"^^xsd:boolean)))
) 
